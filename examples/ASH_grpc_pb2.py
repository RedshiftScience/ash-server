# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ASH_grpc.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0e\x41SH_grpc.proto\"\x99\x01\n\x12ServerPIPERRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\r\n\x05model\x18\x02 \x01(\t\x12\x13\n\x0bnoise_scale\x18\x03 \x01(\x02\x12\x14\n\x0clength_scale\x18\x04 \x01(\x02\x12\x15\n\rnoise_scale_w\x18\x05 \x01(\x02\x12\x12\n\nspeaker_id\x18\x06 \x01(\x05\x12\x10\n\x08\x61uto_rvc\x18\x07 \x01(\x08\"*\n\x13ServerPIPERResponse\x12\x13\n\x0b\x61udio_bytes\x18\x01 \x01(\x0c\"\xb0\x04\n\x10ServerTTSRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x11\n\tdelimiter\x18\x02 \x01(\t\x12\x0f\n\x07\x65motion\x18\x03 \x01(\t\x12\x0e\n\x06prompt\x18\x04 \x01(\t\x12\r\n\x05voice\x18\x05 \x01(\t\x12\x11\n\tmic_audio\x18\x06 \x01(\x0c\x12\x1c\n\x14voice_latents_chunks\x18\x07 \x01(\x05\x12\x12\n\ncandidates\x18\x08 \x01(\x05\x12\x0c\n\x04seed\x18\t \x01(\x05\x12\"\n\x1anum_autoregressive_samples\x18\n \x01(\x05\x12\x1c\n\x14\x64iffusion_iterations\x18\x0b \x01(\x05\x12\x13\n\x0btemperature\x18\x0c \x01(\x02\x12\x19\n\x11\x64iffusion_sampler\x18\r \x01(\t\x12\x16\n\x0e\x62reathing_room\x18\x0e \x01(\x05\x12\x13\n\x0b\x63vvp_weight\x18\x0f \x01(\x02\x12\r\n\x05top_p\x18\x10 \x01(\x02\x12\x1d\n\x15\x64iffusion_temperature\x18\x11 \x01(\x02\x12\x16\n\x0elength_penalty\x18\x12 \x01(\x02\x12\x1a\n\x12repetition_penalty\x18\x13 \x01(\x02\x12\x13\n\x0b\x63ond_free_k\x18\x14 \x01(\x05\x12\x15\n\rexperimentals\x18\x15 \x03(\t\x12!\n\x19voice_latents_original_ar\x18\x16 \x01(\x0c\x12(\n voice_latents_original_diffusion\x18\x17 \x01(\x0c\"(\n\x11ServerTTSResponse\x12\x13\n\x0b\x61udio_bytes\x18\x01 \x01(\x0c\"\x9c\x02\n\x10ServerRVCRequest\x12\x0b\n\x03sid\x18\x01 \x01(\x05\x12\x13\n\x0b\x61udio_bytes\x18\x02 \x01(\x0c\x12\x11\n\tf0_up_key\x18\x03 \x01(\x02\x12\x0f\n\x07\x66\x30_file\x18\x04 \x01(\t\x12\x11\n\tf0_method\x18\x05 \x01(\t\x12\x12\n\nfile_index\x18\x06 \x01(\t\x12\x13\n\x0b\x66ile_index2\x18\x07 \x01(\t\x12\x12\n\nindex_rate\x18\x08 \x01(\x02\x12\x15\n\rfilter_radius\x18\t \x01(\x05\x12\x13\n\x0bresample_sr\x18\n \x01(\x05\x12\x14\n\x0crms_mix_rate\x18\x0b \x01(\x05\x12\x0f\n\x07protect\x18\x0c \x01(\x02\x12\x0f\n\x07version\x18\r \x01(\t\x12\x0e\n\x06tgt_sr\x18\x0e \x01(\x05\"(\n\x11ServerRVCResponse\x12\x13\n\x0b\x61udio_bytes\x18\x01 \x01(\x0c\x32T\n\x12ServerPIPERService\x12>\n\x0fSynthesizePiper\x12\x13.ServerPIPERRequest\x1a\x14.ServerPIPERResponse\"\x00\x32L\n\x10ServerTTSService\x12\x38\n\rSynthesizeTTS\x12\x11.ServerTTSRequest\x1a\x12.ServerTTSResponse\"\x00\x32K\n\x10ServerRVCService\x12\x37\n\x0cProcessAudio\x12\x11.ServerRVCRequest\x1a\x12.ServerRVCResponse\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ASH_grpc_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SERVERPIPERREQUEST._serialized_start=19
  _SERVERPIPERREQUEST._serialized_end=172
  _SERVERPIPERRESPONSE._serialized_start=174
  _SERVERPIPERRESPONSE._serialized_end=216
  _SERVERTTSREQUEST._serialized_start=219
  _SERVERTTSREQUEST._serialized_end=779
  _SERVERTTSRESPONSE._serialized_start=781
  _SERVERTTSRESPONSE._serialized_end=821
  _SERVERRVCREQUEST._serialized_start=824
  _SERVERRVCREQUEST._serialized_end=1108
  _SERVERRVCRESPONSE._serialized_start=1110
  _SERVERRVCRESPONSE._serialized_end=1150
  _SERVERPIPERSERVICE._serialized_start=1152
  _SERVERPIPERSERVICE._serialized_end=1236
  _SERVERTTSSERVICE._serialized_start=1238
  _SERVERTTSSERVICE._serialized_end=1314
  _SERVERRVCSERVICE._serialized_start=1316
  _SERVERRVCSERVICE._serialized_end=1391
# @@protoc_insertion_point(module_scope)
